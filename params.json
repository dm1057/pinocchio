{"name":"Pinocchio","tagline":"Git based server provisioning.","body":"# [Pinocchio] - A git puppet.\r\n\r\nA minimalist tool for Git based server provisioning.\r\n\r\n![Pinocchio](https://gist.github.com/vic/3494d261c68cb3b591e6/raw/acdbcdeb06606ee8a833e992e135bec6db34ecac/pinocchio.jpg)\r\n\r\n### Why?\r\n\r\nServer configuration and software provisioning should be damn simple.\r\n\r\nThere are lots of tools for helping you install and configure your\r\nfull software stack at your new and shiny cloud based slice. Just to name\r\na few, we have [Puppet], [Chef], and the [Capistrano] based [Sprinkle].\r\nAll of them trying to solve the problem of automating software installation\r\nand configuration on many servers. Basically you write a _recipe_ file \r\ncontaining instructions on how to install or configure something, some of\r\nthese recipes require you to learn their respective mini/dsl language, \r\nsome of them even require you to host those recipes on a service of their\r\nown.\r\nSure these tools all have their own merit and can be useful when managing\r\nlots of servers, but for me, they were sometimes just like too much complex\r\nwhen I just wanted to provision a new slice to get more fun at coding a \r\nnew experiment.\r\n\r\nI just wanted to have some dead simple way of uploading a new configuration\r\nfile or instructions for the server on how to install something. I wanted to\r\ndeliver these just like I'm used with regular code, by using git. \r\nI wanted to push and see *only* the new pending instructions being executed\r\non my remote slices. I wanted to have all of it versioned and under control.\r\nI wanted these changes to be incremental, something like using rails database\r\nmigrations but for provisioning my servers.\r\n\r\nSo [Pinocchio] was born.\r\n\r\n### How it works\r\n\r\n[Pinocchio] is just a simple git `update` hook. It works by determining which\r\nchanges it needs to execute since the last successful update. \r\nIt does it by leveraging on git to know which *migrations* need to be run, \r\nand only when _*all*_ of these pending migrations have a successful exit status\r\nthe git repo is updated.\r\n\r\n### Installation\r\n\r\nTo use [Pinocchio] on your remote server, all you need is for it to have\r\ngit installed and the pinocchio's update hook configured at a bare repo.\r\n\r\n```shell\r\n# install git unless you already have it on your remote server\r\n$ ssh ubuntu@my-new-slice 'sudo apt-get install git'\r\n\r\n# create a remote repo for pinocchio and install the update hook\r\n$ ssh ubuntu@my-new-slice 'git init --bare ~/pinocchio'\r\n$ scp hooks/pinocchio ubuntu@my-new-slice:~/pinocchio/hooks/update\r\n```\r\n\r\n### Usage\r\n\r\nClone [Pinocchio] into a local directory on your computer, and edit\r\nyour remotes accordingly, for our previous ubuntu example it would be:\r\n\r\n```shell\r\n$ git remote --set-url origin ubuntu@my-new-slice:~/pinocchio\r\n```\r\n\r\nOf course you can create as many remotes as servers you want to provision.\r\n\r\nAdjust the [config](https://github.com/vic/pinocchio/blob/master/config) file\r\nas you see fit, start writing some `migrate/` scripts and `git push`.\r\n\r\n\r\n###### Updating your remote servers\r\n\r\n[Pinocchio] lets you manage incremental changes on your server as\r\na simple git repo. So, after you've written some migration scripts\r\nat `migrate/` or placed some configuration files under `files/` all\r\nyou need if to simply make a `git push` and the pinocchio's update\r\nhook will take care of performing pending actions and updating files.\r\n\r\nIf all migrations run successfully, the code is updated and next time only\r\nnew migrations will be executed.\r\n\r\n### Contributing\r\n\r\nFeel free to contribute issues, ideas, pull-requests to [http://github.com/vic/pinocchio/issues](http://github.com/vic/pinocchio/issues) \r\n\r\n### Testimonials\r\n\r\n> Just another puppet who loves using this simple tool to improve their infrastructure and development process:\r\n>\r\n![Infraestructur](https://gist.github.com/vic/3494d261c68cb3b591e6/raw/ab4c364f0016fc2f041b86dd842c07515d5dc758/infraestructur.png)\r\n![Development process](https://gist.github.com/vic/3494d261c68cb3b591e6/raw/505e8b0cc8c3515810d26750da90cd9df11b0e00/development.png)\r\n\r\n\r\n### License\r\n\r\nMIT\r\n\r\n[Puppet]: http://puppetlabs.com\r\n[Chef]: http://docs.opscode.com/index.html\r\n[Capistrano]: http://www.capistranorb.com/\r\n[Sprinkle]: https://github.com/sprinkle-tool/sprinkle\r\n[Pinocchio]: http://github.com/vic/pinocchio/\r\n","google":"UA-45850871-2","note":"Don't delete this file! It's used internally to help with page regeneration."}